// <auto-generated />
using System;
using EngineeringAdmissionCommitteePersistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EngineeringAdmissionCommitteePersistance.Migrations
{
    [DbContext(typeof(EngineeringAdmissionCommitteeContext))]
    [Migration("20220602061256_addUniqueKeysToPreference")]
    partial class addUniqueKeysToPreference
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.AdminModel", b =>
                {
                    b.Property<Guid>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            AdminName = "Hiren"
                        });
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.AdmissionModel", b =>
                {
                    b.Property<Guid>("AdmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollegeWithCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AdmissionId");

                    b.HasIndex("CollegeWithCourseId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Admissions");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeModel", b =>
                {
                    b.Property<Guid>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollegeId");

                    b.ToTable("Colleges");

                    b.HasData(
                        new
                        {
                            CollegeId = new Guid("8abd8dbc-0369-468b-9293-a1d598767e4e"),
                            CollegeName = "darshan institute of engineering and technology"
                        },
                        new
                        {
                            CollegeId = new Guid("84ef38fc-cb5a-4cd8-8fbc-6b79ec3450ad"),
                            CollegeName = "vvp engineering college"
                        },
                        new
                        {
                            CollegeId = new Guid("bf53be06-2342-41f2-b957-0e57cfbfcbca"),
                            CollegeName = "atmiya university"
                        });
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeWithCourseModel", b =>
                {
                    b.Property<Guid>("CollegeWithCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableSeat")
                        .HasColumnType("int");

                    b.Property<Guid>("CollegeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CollegeWithCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CollegeId", "CourseId")
                        .IsUnique();

                    b.ToTable("CollegeWithCourses");

                    b.HasData(
                        new
                        {
                            CollegeWithCourseId = new Guid("d41d301a-d9d7-44b8-a7d6-23d18491f811"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("8abd8dbc-0369-468b-9293-a1d598767e4e"),
                            CourseId = new Guid("75c6afbc-9eac-4d3d-98e2-97e4f0af84f5")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("a9115fcd-854d-43c8-bffb-16fc22bee18a"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("8abd8dbc-0369-468b-9293-a1d598767e4e"),
                            CourseId = new Guid("846bd236-1c56-49c9-81da-3acf5c38ccbb")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("388afa3f-dd5c-4bb0-a637-7c6936cd4a41"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("8abd8dbc-0369-468b-9293-a1d598767e4e"),
                            CourseId = new Guid("1f7f5cea-b4a4-4ad3-839b-6d1a27850186")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("9a32dd49-a593-4f2f-a7ce-7f3db14a55c2"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("84ef38fc-cb5a-4cd8-8fbc-6b79ec3450ad"),
                            CourseId = new Guid("75c6afbc-9eac-4d3d-98e2-97e4f0af84f5")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("458e5241-55fb-4c78-8b42-306c0369f86c"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("84ef38fc-cb5a-4cd8-8fbc-6b79ec3450ad"),
                            CourseId = new Guid("846bd236-1c56-49c9-81da-3acf5c38ccbb")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("48fef29e-e1e6-4ca5-ab5d-2a6327042d7a"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("84ef38fc-cb5a-4cd8-8fbc-6b79ec3450ad"),
                            CourseId = new Guid("1f7f5cea-b4a4-4ad3-839b-6d1a27850186")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("2e609033-65c6-4573-ad50-b488da9922a3"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("bf53be06-2342-41f2-b957-0e57cfbfcbca"),
                            CourseId = new Guid("75c6afbc-9eac-4d3d-98e2-97e4f0af84f5")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("114b297e-0064-43aa-b6ba-0895495eda93"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("bf53be06-2342-41f2-b957-0e57cfbfcbca"),
                            CourseId = new Guid("846bd236-1c56-49c9-81da-3acf5c38ccbb")
                        },
                        new
                        {
                            CollegeWithCourseId = new Guid("451e9b5d-3ce1-442e-bf20-b0c289101c5b"),
                            AvailableSeat = 0,
                            CollegeId = new Guid("bf53be06-2342-41f2-b957-0e57cfbfcbca"),
                            CourseId = new Guid("1f7f5cea-b4a4-4ad3-839b-6d1a27850186")
                        });
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.CourseModel", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("75c6afbc-9eac-4d3d-98e2-97e4f0af84f5"),
                            CourseName = "CE"
                        },
                        new
                        {
                            CourseId = new Guid("846bd236-1c56-49c9-81da-3acf5c38ccbb"),
                            CourseName = "ME"
                        },
                        new
                        {
                            CourseId = new Guid("1f7f5cea-b4a4-4ad3-839b-6d1a27850186"),
                            CourseName = "EE"
                        });
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.MaritModel", b =>
                {
                    b.Property<Guid>("MaritId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaritId");

                    b.HasIndex("Rank")
                        .IsUnique();

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Marits");

                    b.HasData(
                        new
                        {
                            MaritId = new Guid("b626f487-5e56-49ec-b2bb-3f80c2cdee81"),
                            Rank = 1,
                            StudentId = new Guid("5e4559e4-624d-4dae-8527-fa2219a61740")
                        });
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.PreferenceCollegeModel", b =>
                {
                    b.Property<Guid>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollegeWithCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PreferenceId");

                    b.HasIndex("CollegeWithCourseId");

                    b.HasIndex("StudentId", "CollegeWithCourseId")
                        .IsUnique();

                    b.HasIndex("StudentId", "Priority")
                        .IsUnique();

                    b.ToTable("PreferenceColleges");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.StudentModel", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BoardMark")
                        .HasColumnType("real");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GujcetMark")
                        .HasColumnType("real");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("5e4559e4-624d-4dae-8527-fa2219a61740"),
                            BoardMark = 80f,
                            Gender = "Male",
                            GujcetMark = 70f,
                            StudentName = "Amit"
                        });
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.AdmissionModel", b =>
                {
                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeWithCourseModel", "CollegeWithCourse")
                        .WithMany()
                        .HasForeignKey("CollegeWithCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.StudentModel", "Student")
                        .WithOne("Admission")
                        .HasForeignKey("EngineeringAdmissionCommitteePersistance.Datamodels.AdmissionModel", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollegeWithCourse");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeWithCourseModel", b =>
                {
                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeModel", "College")
                        .WithMany("CollegeWithCourses")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.CourseModel", "Course")
                        .WithMany("CollegeWithCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.MaritModel", b =>
                {
                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.StudentModel", "Student")
                        .WithOne("Marit")
                        .HasForeignKey("EngineeringAdmissionCommitteePersistance.Datamodels.MaritModel", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.PreferenceCollegeModel", b =>
                {
                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeWithCourseModel", "CollegeWithCourse")
                        .WithMany()
                        .HasForeignKey("CollegeWithCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineeringAdmissionCommitteePersistance.Datamodels.StudentModel", "Student")
                        .WithMany("PreferenceColleges")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollegeWithCourse");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.CollegeModel", b =>
                {
                    b.Navigation("CollegeWithCourses");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.CourseModel", b =>
                {
                    b.Navigation("CollegeWithCourses");
                });

            modelBuilder.Entity("EngineeringAdmissionCommitteePersistance.Datamodels.StudentModel", b =>
                {
                    b.Navigation("Admission")
                        .IsRequired();

                    b.Navigation("Marit")
                        .IsRequired();

                    b.Navigation("PreferenceColleges");
                });
#pragma warning restore 612, 618
        }
    }
}
